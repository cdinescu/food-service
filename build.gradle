plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.vitanum'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'
targetCompatibility = '15'

project.ext.openApiVersion='1.5.4'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.1")
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/customJacocoReportDir")
}

dependencies {
    /**
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
     */
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    implementation 'junit:junit:4.12'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    implementation "org.springdoc:springdoc-openapi-webflux-ui:${project.openApiVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}


if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/report.xml")
        csv.enabled false
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
